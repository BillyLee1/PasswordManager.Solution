@{
  Layout = "_Layout";
}

@using PasswordManager.ViewModels

@model LoginViewModel

<div class="container mt-4">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card">
        <div class="card-header text-center">
          <h2>Log In</h2>
        </div>
        <div class="card-body text-center">
          @if (!ViewData.ModelState.IsValid)
          {
            <div class="alert alert-danger" role="alert">
              @Html.ValidationSummary("Please fix the following error(s) and then resubmit the form:")
            </div>
          }
          @using (Html.BeginForm())
          {
            <div class="form-group row">
              <div class="col-12">
                @Html.LabelFor(m => m.Email, new { @class = "text-center" })
              </div>
              <div class="col-12">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control mx-auto", style = "width: 200px;" })
              </div>
            </div>

            <div class="form-group row">
              <div class="col-12">
                @Html.LabelFor(m => m.Password, new { @class = "text-center" })
              </div>
              <div class="col-12">
                @Html.EditorFor(m => m.Password, new { @class = "form-control mx-auto", style = "width: 200px;" })
              </div>
            </div>

            <div class="form-group">
              <input type="submit" value="Log in" class="btn btn-primary" />
            </div>
          }
          <hr />
          <div class="text-center">
            <p>
              @Html.ActionLink("Register for an account", "Register", null, new { @class = "btn btn-link" })
            </p>
            <p>
              @Html.ActionLink("Back to accounts page", "Index", null, new { @class = "btn btn-link" })
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
